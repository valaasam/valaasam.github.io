# ylim(20,20.7)+
ggtitle("Animal2")+
xlab("Time")+
ylab("% Oxygen") +
theme(
plot.title = element_text(hjust=0.5),
axis.text = element_text(size=12),
axis.title = element_text(size=14))
ggplot(x=time, y=Oxygen, data=bug3_sub)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
theme_classic()+
# ylim(20,20.7)+
ggtitle("Animal3")+
xlab("Time")+
ylab("% Oxygen") +
theme(
plot.title = element_text(hjust=0.5),
axis.text = element_text(size=12),
axis.title = element_text(size=14))
ggplot(x=time, y=Oxygen, data=control_sub)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
#ylim(20.7,21.4)+
ggtitle("Control")+
xlab("Time")+
# ylab("% Oxygen") +
theme_classic()+
# scale_x_continuous(breaks=seq(trunc(min(control_trial_2$time)), max(control_trial_2$time), .5))+
theme(
plot.title = element_text(hjust=0.5),
axis.text = element_text(size=12),
axis.title.x = element_text(size=14),
axis.title.y = element_blank())
###JAR 2
#extract MR and std error from bug jar 2
bug2.mod<-lm(Oxygen~time, data=bug2_sub)
summary(bug2.mod)
bug2.mod$coefficients # this produces your y intercept and slope.
bug2_MR<-bug2.mod$coefficients[2] #Metabolic rate per minute
bug2_MR
bug2_MR.se <- sqrt(diag(vcov(bug2.mod)))[2]
bug2_resid.se<-summary(bug2.mod)$sigma
####JAR 3
#extract MR and std error from bug jar 3
bug3.mod<-lm(Oxygen~time, data=bug3_sub)
summary(bug3.mod)
bug3.mod$coefficients # this produces your y intercept and slope.
bug3_MR<-bug3.mod$coefficients[2] #Metabolic rate per minute
bug3_MR
bug3_MR.se <- sqrt(diag(vcov(bug3.mod)))[2]
bug3_resid.se<-summary(bug3.mod)$sigma
#correct for control jar
control.mod<-lm(Oxygen~time, data=control_sub)
summary(control.mod)
control_slope<-control.mod$coefficients[2] # slope for control should be close to 0
control_slope
#subtract control from bug MRs
bug2_MRcorr <- bug2_MR-control_slope
bug3_MRcorr <- bug3_MR-control_slope
bug2_MRcorr
bug3_MRcorr
#extract temperature
temp <- mean(control_sub$Temperature)
temp.se <- sd(control_sub$Temperature)/sqrt(length(control_sub$Temperature))
#extract duration of trial
duration_used<-max(control_sub$time)-min(control_sub$time)
duration_total<-max(bug2$time)-min(bug2$time)
#Collect into dataframe
bug2_df<- data.frame(file=file, id = "2_corr", t_corrected = 1, mass = 1.42, n=20,
MR = bug2_MRcorr, MR_se=bug2_MR.se, resid_se=bug2_resid.se,
temp=temp, temp.se=temp.se, duration_total=duration_total, duration_used=duration_used, date=control$Date[1],
species = "cricket", notes ="temp MANUAL")
bug3_df<- data.frame(file=file, id = "3_corr",  t_corrected = 1, mass = 0.69, n=12,
MR = bug3_MRcorr, MR_se=bug3_MR.se, resid_se=bug3_resid.se,
temp=temp, temp.se=temp.se, duration_total=duration_total, duration_used=duration_used, date=control$Date[1],
species = "cricket", notes ="temp MANUAL")
bug2_MRcorr
bug3_MRcorr
outlist[[3]] <-bug2_df #for adding multiple jars
outlist[[4]] <-bug3_df
#### combine data ####
alldata <- data.table::rbindlist(outlist, fill=TRUE)
#keep(outlist, sure = TRUE) #clears environment except for OUTLIST
rm(list=ls()[!ls() %in% c("outlist")])
#### combine data ####
alldata <- data.table::rbindlist(outlist, fill=TRUE)
alldata <- alldata%>% separate(id, into = c("id_2", "corr"), sep = "_", remove = FALSE)
alldata$MR <- abs(alldata$MR)
alldata$t_corrected[which(alldata$t_corrected==1)] <- "cor"
alldata$t_corrected[which(alldata$t_corrected==0)] <- "raw"
#check that corrected temps measurements are same as with raw temp probe measures
alldata %>%
mutate(t_corrected = as.character(t_corrected)) %>%
select(id_2, t_corrected, MR, temp)  %>%
mutate(across(4, round, 0)) %>%
mutate(temp=as.character(temp)) %>%
pivot_wider(names_from = t_corrected, values_from = MR)  %>%
ggplot()+
geom_point(aes(x=cor, y=raw))+
theme_classic()
file<-basename("cricket_15_cor.xlsx")
control <- read_excel(file, sheet = "SADD0002000342, Ch 1")
bug2 <- read_excel(file, sheet = "SADD0002000342, Ch 2")
bug3 <- read_excel(file, sheet = "SADD0002000342, Ch 3")
colnames(control)[which(names(control) == "Delta T [min]")] <- "time"
colnames(bug2)[which(names(bug2) == "Delta T [min]")] <- "time"
colnames(bug3)[which(names(bug3) == "Delta T [min]")] <- "time"
#started trial late
control<-subset(control, time>24)
bug2<-subset(bug2, time>24)
bug3<-subset(bug3, time>24)
#CHECK SAME TEMPS ACROSS
mean(control$Temperature)
mean(bug2$Temperature)
mean(bug3$Temperature)
#Look at data
ggplot(x=time, y=Oxygen, data=bug2)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
ggtitle("Animal2")+
theme_classic()+
#  scale_x_continuous(breaks=seq(trunc(min(bug_trial$time)), max(bug_trial$time), .5))+
theme(plot.title = element_text(hjust=0.5))
ggplot(x=time, y=Oxygen, data=bug3)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
ggtitle("Animal3")+
theme_classic()+
#  scale_x_continuous(breaks=seq(trunc(min(bug_trial$time)), max(bug_trial$time), .5))+
theme(plot.title = element_text(hjust=0.5))
ggplot(x=time, y=Oxygen, data=control)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
ggtitle("Control")+
theme_classic()+
# scale_x_continuous(breaks=seq(trunc(min(control_trial$time)), max(control_trial$time), .5))+
theme(plot.title = element_text(hjust=0.5))
#subset for part of the curve that looks normal
control_sub<-subset(control, time>40 & time<50)
bug2_sub<-bug2[which(bug2$Id>=min(control_sub$Id) & bug2$Id <=max(control_sub$Id)),]
bug3_sub<-bug3[which(bug3$Id>=min(control_sub$Id) & bug3$Id <=max(control_sub$Id)),]
# look at subsetted data
ggplot(x=time, y=Oxygen, data=bug2_sub)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
theme_classic()+
# ylim(20,20.7)+
ggtitle("Animal2")+
xlab("Time")+
ylab("% Oxygen") +
theme(
plot.title = element_text(hjust=0.5),
axis.text = element_text(size=12),
axis.title = element_text(size=14))
ggplot(x=time, y=Oxygen, data=bug3_sub)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
theme_classic()+
# ylim(20,20.7)+
ggtitle("Animal3")+
xlab("Time")+
ylab("% Oxygen") +
theme(
plot.title = element_text(hjust=0.5),
axis.text = element_text(size=12),
axis.title = element_text(size=14))
ggplot(x=time, y=Oxygen, data=control_sub)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
#ylim(20.7,21.4)+
ggtitle("Control")+
xlab("Time")+
# ylab("% Oxygen") +
theme_classic()+
# scale_x_continuous(breaks=seq(trunc(min(control_trial_2$time)), max(control_trial_2$time), .5))+
theme(
plot.title = element_text(hjust=0.5),
axis.text = element_text(size=12),
axis.title.x = element_text(size=14),
axis.title.y = element_blank())
###JAR 2
#extract MR and std error from bug jar 2
bug2.mod<-lm(Oxygen~time, data=bug2_sub)
summary(bug2.mod)
bug2.mod$coefficients # this produces your y intercept and slope.
bug2_MR<-bug2.mod$coefficients[2] #Metabolic rate per minute
bug2_MR
bug2_MR.se <- sqrt(diag(vcov(bug2.mod)))[2]
bug2_resid.se<-summary(bug2.mod)$sigma
####JAR 3
#extract MR and std error from bug jar 3
bug3.mod<-lm(Oxygen~time, data=bug3_sub)
summary(bug3.mod)
bug3.mod$coefficients # this produces your y intercept and slope.
bug3_MR<-bug3.mod$coefficients[2] #Metabolic rate per minute
bug3_MR
bug3_MR.se <- sqrt(diag(vcov(bug3.mod)))[2]
bug3_resid.se<-summary(bug3.mod)$sigma
#correct for control jar
control.mod<-lm(Oxygen~time, data=control_sub)
summary(control.mod)
control_slope<-control.mod$coefficients[2] # slope for control should be close to 0
control_slope
#subtract control from bug MRs
bug2_MRcorr <- bug2_MR-control_slope
bug3_MRcorr <- bug3_MR-control_slope
bug2_MRcorr
bug3_MRcorr
#extract temperature
temp <- mean(control_sub$Temperature)
temp.se <- sd(control_sub$Temperature)/sqrt(length(control_sub$Temperature))
#extract duration of trial
duration_used<-max(control_sub$time)-min(control_sub$time)
duration_total<-max(bug2$time)-min(bug2$time)
#Collect into dataframe
bug2_df<- data.frame(file=file, id = "2_corr", t_corrected = 1, mass = 1.42, n=20,
MR = bug2_MRcorr, MR_se=bug2_MR.se, resid_se=bug2_resid.se,
temp=temp, temp.se=temp.se, duration_total=duration_total, duration_used=duration_used, date=control$Date[1],
species = "cricket", notes ="temp MANUAL")
bug3_df<- data.frame(file=file, id = "3_corr",  t_corrected = 1, mass = 0.69, n=12,
MR = bug3_MRcorr, MR_se=bug3_MR.se, resid_se=bug3_resid.se,
temp=temp, temp.se=temp.se, duration_total=duration_total, duration_used=duration_used, date=control$Date[1],
species = "cricket", notes ="temp MANUAL")
View(outlist)
outlist[[3]] <-bug2_df #for adding multiple jars
outlist[[4]] <-bug3_df
bug2_MRcorr
bug2_MRcorr
outlist[[3]] <-bug2_df #for adding multiple jars
outlist[[4]] <-bug3_df
View(outlist)
#keep(outlist, sure = TRUE) #clears environment except for OUTLIST
rm(list=ls()[!ls() %in% c("outlist")])
#### combine data ####
alldata <- data.table::rbindlist(outlist, fill=TRUE)
View(alldata)
alldata <- alldata%>% separate(id, into = c("id_2", "corr"), sep = "_", remove = FALSE)
alldata$MR <- abs(alldata$MR)
alldata$t_corrected[which(alldata$t_corrected==1)] <- "cor"
alldata$t_corrected[which(alldata$t_corrected==0)] <- "raw"
#check that corrected temps measurements are same as with raw temp probe measures
alldata %>%
mutate(t_corrected = as.character(t_corrected)) %>%
select(id_2, t_corrected, MR, temp)  %>%
mutate(across(4, round, 0)) %>%
mutate(temp=as.character(temp)) %>%
pivot_wider(names_from = t_corrected, values_from = MR)  %>%
ggplot()+
geom_point(aes(x=cor, y=raw))+
theme_classic()
#subset for part of the curve that looks normal
control_sub<-subset(control, time>40 & time<50)
file<-basename("cricket_15.xlsx")
control <- read_excel(file, sheet = "SADD0002000342, Ch 1")
bug2 <- read_excel(file, sheet = "SADD0002000342, Ch 2")
bug3 <- read_excel(file, sheet = "SADD0002000342, Ch 3")
colnames(control)[which(names(control) == "Delta T [min]")] <- "time"
colnames(bug2)[which(names(bug2) == "Delta T [min]")] <- "time"
colnames(bug3)[which(names(bug3) == "Delta T [min]")] <- "time"
#started trial late
control<-subset(control, time>24)
bug2<-subset(bug2, time>24)
bug3<-subset(bug3, time>24)
#CHECK SAME TEMPS ACROSS
mean(control$Temperature)
mean(bug2$Temperature)
mean(bug3$Temperature)
#Look at data
ggplot(x=time, y=Oxygen, data=bug2)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
ggtitle("Animal2")+
theme_classic()+
#  scale_x_continuous(breaks=seq(trunc(min(bug_trial$time)), max(bug_trial$time), .5))+
theme(plot.title = element_text(hjust=0.5))
ggplot(x=time, y=Oxygen, data=bug3)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
ggtitle("Animal3")+
theme_classic()+
#  scale_x_continuous(breaks=seq(trunc(min(bug_trial$time)), max(bug_trial$time), .5))+
theme(plot.title = element_text(hjust=0.5))
ggplot(x=time, y=Oxygen, data=control)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
ggtitle("Control")+
theme_classic()+
# scale_x_continuous(breaks=seq(trunc(min(control_trial$time)), max(control_trial$time), .5))+
theme(plot.title = element_text(hjust=0.5))
#subset for part of the curve that looks normal
control_sub<-subset(control, time>40 & time<50)
bug2_sub<-bug2[which(bug2$Id>=min(control_sub$Id) & bug2$Id <=max(control_sub$Id)),]
bug3_sub<-bug3[which(bug3$Id>=min(control_sub$Id) & bug3$Id <=max(control_sub$Id)),]
# look at subsetted data
ggplot(x=time, y=Oxygen, data=bug2_sub)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
theme_classic()+
# ylim(20,20.7)+
ggtitle("Animal2")+
xlab("Time")+
ylab("% Oxygen") +
theme(
plot.title = element_text(hjust=0.5),
axis.text = element_text(size=12),
axis.title = element_text(size=14))
ggplot(x=time, y=Oxygen, data=bug3_sub)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
theme_classic()+
# ylim(20,20.7)+
ggtitle("Animal3")+
xlab("Time")+
ylab("% Oxygen") +
theme(
plot.title = element_text(hjust=0.5),
axis.text = element_text(size=12),
axis.title = element_text(size=14))
ggplot(x=time, y=Oxygen, data=control_sub)+
geom_point(aes(x=time, y=Oxygen), shape=16, alpha=0.6)+
geom_smooth(aes(x=time, y=Oxygen), method=lm)+
#ylim(20.7,21.4)+
ggtitle("Control")+
xlab("Time")+
# ylab("% Oxygen") +
theme_classic()+
# scale_x_continuous(breaks=seq(trunc(min(control_trial_2$time)), max(control_trial_2$time), .5))+
theme(
plot.title = element_text(hjust=0.5),
axis.text = element_text(size=12),
axis.title.x = element_text(size=14),
axis.title.y = element_blank())
###JAR 2
#extract MR and std error from bug jar 2
bug2.mod<-lm(Oxygen~time, data=bug2_sub)
summary(bug2.mod)
bug2.mod$coefficients # this produces your y intercept and slope.
bug2_MR<-bug2.mod$coefficients[2] #Metabolic rate per minute
bug2_MR
bug2_MR.se <- sqrt(diag(vcov(bug2.mod)))[2]
bug2_resid.se<-summary(bug2.mod)$sigma
####JAR 3
#extract MR and std error from bug jar 3
bug3.mod<-lm(Oxygen~time, data=bug3_sub)
summary(bug3.mod)
bug3.mod$coefficients # this produces your y intercept and slope.
bug3_MR<-bug3.mod$coefficients[2] #Metabolic rate per minute
bug3_MR
bug3_MR.se <- sqrt(diag(vcov(bug3.mod)))[2]
bug3_resid.se<-summary(bug3.mod)$sigma
#correct for control jar
control.mod<-lm(Oxygen~time, data=control_sub)
summary(control.mod)
control_slope<-control.mod$coefficients[2] # slope for control should be close to 0
control_slope
#subtract control from bug MRs
bug2_MRcorr <- bug2_MR-control_slope
bug3_MRcorr <- bug3_MR-control_slope
bug2_MRcorr
bug3_MRcorr
#extract temperature
temp <- mean(control_sub$Temperature)
temp.se <- sd(control_sub$Temperature)/sqrt(length(control_sub$Temperature))
#extract duration of trial
duration_used<-max(control_sub$time)-min(control_sub$time)
duration_total<-max(bug2$time)-min(bug2$time)
#Collect into dataframe
bug2_df<- data.frame(id = 2, t_corrected = 0, mass = 1.42, n=20,
MR = bug2_MRcorr, MR_se=bug2_MR.se, resid_se=bug2_resid.se,
temp=temp, temp.se=temp.se, duration_total=duration_total, duration_used=duration_used, date=control$Date[1],
species = "cricket", notes ="temp auto")
bug3_df<- data.frame(id = 3, t_corrected = 0, mass = 0.69, n=12,
MR = bug3_MRcorr, MR_se=bug3_MR.se, resid_se=bug3_resid.se,
temp=temp, temp.se=temp.se, duration_total=duration_total, duration_used=duration_used, date=control$Date[1],
species = "cricket", notes ="temp auto")
outlist[[1]] <-bug2_df #for adding multiple jars
outlist[[2]] <-bug3_df
#keep(outlist, sure = TRUE) #clears environment except for OUTLIST
rm(list=ls()[!ls() %in% c("outlist")])
#### combine data ####
alldata <- data.table::rbindlist(outlist, fill=TRUE)
alldata <- alldata%>% separate(id, into = c("id_2", "corr"), sep = "_", remove = FALSE)
alldata$MR <- abs(alldata$MR)
alldata$t_corrected[which(alldata$t_corrected==1)] <- "cor"
alldata$t_corrected[which(alldata$t_corrected==0)] <- "raw"
#check that corrected temps measurements are same as with raw temp probe measures
alldata %>%
mutate(t_corrected = as.character(t_corrected)) %>%
select(id_2, t_corrected, MR, temp)  %>%
mutate(across(4, round, 0)) %>%
mutate(temp=as.character(temp)) %>%
pivot_wider(names_from = t_corrected, values_from = MR)  %>%
ggplot()+
geom_point(aes(x=cor, y=raw))+
theme_classic()
View(alldata)
#check across temps
alldata %>%
filter(t_corrected == "cor") %>%
ggplot()+
geom_point(aes(x=temp, y=MR, color=id_2))+
theme_classic()
#check that corrected temps measurements are same as with raw temp probe measures
alldata %>%
mutate(t_corrected = as.character(t_corrected)) %>%
select(id_2, t_corrected, MR, temp)  %>%
mutate(across(4, round, 0)) %>%
mutate(temp=as.character(temp)) %>%
pivot_wider(names_from = t_corrected, values_from = MR)  %>%
ggplot()+
geom_point(aes(x=cor, y=raw))+
theme_classic()
#check that corrected temps measurements are same as with raw temp probe measures
alldata %>%
mutate(t_corrected = as.character(t_corrected)) %>%
select(id_2, t_corrected, MR, temp)  %>%
mutate(across(4, round, 0)) %>%
mutate(temp=as.character(temp)) %>%
pivot_wider(names_from = t_corrected, values_from = MR)  %>%
ggplot()+
xlim(0,0.025)
#check that corrected temps measurements are same as with raw temp probe measures
alldata %>%
mutate(t_corrected = as.character(t_corrected)) %>%
select(id_2, t_corrected, MR, temp)  %>%
mutate(across(4, round, 0)) %>%
mutate(temp=as.character(temp)) %>%
pivot_wider(names_from = t_corrected, values_from = MR)  %>%
ggplot()+
xlim(0,0.025) +
geom_point(aes(x=cor, y=raw))+
theme_classic()
#check that corrected temps measurements are same as with raw temp probe measures
alldata %>%
mutate(t_corrected = as.character(t_corrected)) %>%
select(id_2, t_corrected, MR, temp)  %>%
mutate(across(4, round, 0)) %>%
mutate(temp=as.character(temp)) %>%
pivot_wider(names_from = t_corrected, values_from = MR)  %>%
ggplot()+
xlim(0,0.025) +
ylim(0,0.025) +
geom_point(aes(x=cor, y=raw))+
theme_classic()
#check that corrected temps measurements are same as with raw temp probe measures
alldata %>%
mutate(t_corrected = as.character(t_corrected)) %>%
select(id_2, t_corrected, MR, temp)  %>%
mutate(across(4, round, 0)) %>%
mutate(temp=as.character(temp)) %>%
pivot_wider(names_from = t_corrected, values_from = MR)  %>%
ggplot()+
geom_point(aes(x=cor, y=raw))+
theme_classic()
#check across temps
alldata %>%
filter(t_corrected == "cor") %>%
ggplot()+
geom_point(aes(x=temp, y=MR, color=id_2))+
theme_classic()
#check across temps
alldata %>%
filter(t_corrected == "cor") %>%
ggplot()+
geom_point(aes(x=temp, y=MR, color=id_2), size=2)+
theme_classic()
#check across temps
alldata %>%
filter(t_corrected == "cor") %>%
ggplot()+
geom_point(aes(x=temp, y=MR, color=id_2), size=3)+
theme_classic()
#check across temps
alldata %>%
filter(t_corrected == "cor") %>%
mutate(MR=MR/mass) %>%
ggplot()+
geom_point(aes(x=temp, y=MR, color=id_2), size=3)+
theme_classic()
#check across temps
alldata %>%
filter(t_corrected == "cor") %>%
mutate(MR=MR/mass) %>%
ggplot()+
geom_point(aes(x=temp, y=MR, color=id_2), size=3)+
geom_smooth()+
theme_classic()
#check across temps
alldata %>%
filter(t_corrected == "cor") %>%
mutate(MR=MR/mass) %>%
ggplot()+
geom_point(aes(x=temp, y=MR, color=id_2), size=3)+
geom_smooth(aes(x=temp, y=MR, color=id_2))+
theme_classic()
#check across temps
alldata %>%
filter(t_corrected == "cor") %>%
mutate(MR=MR/mass) %>%
ggplot()+
geom_point(aes(x=temp, y=MR, color=id_2), size=3)+
geom_line(aes(x=temp, y=MR, color=id_2))+
theme_classic()
#check across temps
alldata %>%
filter(t_corrected == "cor") %>%
mutate(MR=MR/mass) %>%
ggplot()+
geom_point(aes(x=temp, y=MR, color=id_2), size=3)+
geom_smooth(aes(x=temp, y=MR, color=id_2), method="lm")+
theme_classic()
